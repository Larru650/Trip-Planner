@model TheWorld.ViewModels.ContactViewModel
<!--we have to establish what viewmodel will send data to and receive data from. this will make assume that the asp-for properties are names of properties that are realted to the class that's been used as a model-->
@{
    ViewBag.Title = "Contact Page";
}

<div class="row">
    <div class="col-md-6  col-md-offset-3">
        <h2>Contact me</h2>

        @section scripts{
            <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
            <script src="~/lib/jquery-validation-unobtrusive/dist/jquery.validate.unobtrusive.min.js"></script> <!--these jquery scripts are a collection of taghelpers that help the model to express for instance their properties validation on html5 and jquery (client side)-->
        }

        <form method="post">
            <span asp-validation-summary="ModelOnly"></span> <!--this will show the errors related to the global form, rather than individual fields. ie: if the country doesn't match the post code-->
            @if (ViewBag.UserMessage != null)
            {
                <div>@ViewBag.UserMessage</div> <!--this viewmessage will exist in the app controller only if the email is succesfully sent. Then, the message will be rendered-->

            }
            <div class="form-group">
                <label asp-for="Name"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-muted"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email"></label>
                <input type="email" asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-muted"></span>
            </div>
            <div class="form-group">
                <label asp-for="Message"></label>
                <textarea cols="40" rows="4" asp-for="Message" class="form-control"></textarea>
                <span asp-validation-for="Message" class="text-muted"></span>
            </div>


            <div class="form-group">
                <a asp-controller="App" asp-action="Index" class="btn btn-default">Cancel</a>
                <input type="submit" value="Send Message" class="btn btn-success" /> <!--the asp-for will make this form accept data in the form of the viewmodel-->
            </div>
        </form>
    </div>
</div>